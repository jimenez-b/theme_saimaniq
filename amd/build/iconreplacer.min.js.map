{"version":3,"file":"iconreplacer.min.js","sources":["../src/iconreplacer.js"],"sourcesContent":["export const columnResizer = () => {\n    const locations = [\"/moodle\", \"/moodle41\", \"\"];\n    var urlToSend = '';\n\n    locations.forEach(async(location) => {\n        let urlVar = window.location.origin + location + \"/theme/saimaniq/classes.json\";\n        // console.log(\"location is: \" + urlVar);\n        var http = new XMLHttpRequest();\n        http.open('HEAD', urlVar, false);\n        http.send();\n\n        if (http.status != \"404\") {\n            /* A  console.log('The file does not exists');\n        } else {\n            console.log('The file does exist');*/\n            urlToSend = urlVar;\n        }\n    });\n    // console.log('location that exists ' + urlToSend);\n\n    fetch(urlToSend)\n        .then((res) => {\n            if (!res.ok) {\n                throw new Error(`HTTP error! Status: ${res.status}`);\n            }\n            return res.json();\n        })\n        .then((data) => {\n                // console.log(data); // To be erased\n                // console.log('********'); // To be erased\n                data.classes.forEach((classToReplace) => {\n                let oldClasses = document.querySelectorAll('.' + classToReplace.oldClass);\n                if (oldClasses !== null) {\n                    // console.log('length is ' + oldClasses.length); // To be erased\n                    // console.log('-----------'); // To be erased\n                    oldClasses.forEach(oldClass => {\n                        /*\n                            The regular structure goes as follows:\n                            icon fa fa-oldClass\n                            to be replaced by:\n                            icon-saimaniq bi bi-newClass\n                        */\n                        oldClass.classList.replace('icon', 'icon-saimaniq');\n                        oldClass.classList.replace('fa', 'bi');\n                        oldClass.classList.replace(classToReplace.oldClass, classToReplace.newClass);\n                    });\n                }\n                });\n            })\n        .catch((error) =>\n                window.console.error(\"Unable to fetch data:\", error));\n};\n"],"names":["_exports","columnResizer","urlToSend","forEach","async","urlVar","window","location","origin","http","XMLHttpRequest","open","send","status","fetch","then","res","ok","Error","json","data","classes","classToReplace","oldClasses","document","querySelectorAll","oldClass","classList","replace","newClass","catch","error","console"],"mappings":"2JAmDEA,SAAAC,cAnD2BA,KAEzB,IAAIC,UAAY,GADE,CAAC,UAAW,YAAa,IAGjCC,SAAQC,iBACd,IAAIC,OAASC,OAAOC,SAASC,OAASD,SAAW,+BAEjD,IAAIE,KAAO,IAAIC,eACfD,KAAKE,KAAK,OAAQN,QAAQ,GAC1BI,KAAKG,OAEc,OAAfH,KAAKI,SAILX,UAAYG,OAChB,IAIJS,MAAMZ,WACDa,MAAMC,MACH,IAAKA,IAAIC,GACL,MAAM,IAAIC,MAAM,uBAAuBF,IAAIH,UAE/C,OAAOG,IAAIG,MAAM,IAEpBJ,MAAMK,OAGCA,KAAKC,QAAQlB,SAASmB,iBACtB,IAAIC,WAAaC,SAASC,iBAAiB,IAAMH,eAAeI,UAC7C,OAAfH,YAGAA,WAAWpB,SAAQuB,WAOfA,SAASC,UAAUC,QAAQ,OAAQ,iBACnCF,SAASC,UAAUC,QAAQ,KAAM,MACjCF,SAASC,UAAUC,QAAQN,eAAeI,SAAUJ,eAAeO,SAAS,GAEpF,GACE,IAETC,OAAOC,OACAzB,OAAO0B,QAAQD,MAAM,wBAAyBA,QAAO,CACnE"}