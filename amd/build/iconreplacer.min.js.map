{"version":3,"file":"iconreplacer.min.js","sources":["../src/iconreplacer.js"],"sourcesContent":["/* eslint-disable capitalized-comments */\r\n/* eslint-disable promise/always-return */\r\n/* eslint-disable no-console */\r\ndefine(function() {\r\n\r\n    return {\r\n        iconReplacer: function() {\r\n            const locations = [\"/moodle\", \"/moodle41\", \"\"];\r\n            var urlToSend = '';\r\n\r\n            locations.forEach(async(location) => {\r\n                let urlVar = window.location.origin + location + \"/theme/saimaniq/classes.json\";\r\n                // console.log(\"location is: \" + urlVar);\r\n                var http = new XMLHttpRequest();\r\n                http.open('HEAD', urlVar, false);\r\n                http.send();\r\n\r\n                if (http.status != \"404\") {\r\n                    /* A  console.log('The file does not exists');\r\n                } else {\r\n                    console.log('The file does exist');*/\r\n                    urlToSend = urlVar;\r\n                }\r\n            });\r\n            // console.log('location that exists ' + urlToSend);\r\n\r\n            fetch(urlToSend)\r\n                .then((res) => {\r\n                    if (!res.ok) {\r\n                        throw new Error(`HTTP error! Status: ${res.status}`);\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                      // console.log(data); // To be erased\r\n                      // console.log('********'); // To be erased\r\n                      data.classes.forEach((classToReplace) => {\r\n                        let oldClasses = document.querySelectorAll('.' + classToReplace.oldClass);\r\n                        if (oldClasses !== null) {\r\n                            // console.log('length is ' + oldClasses.length); // To be erased\r\n                            // console.log('-----------'); // To be erased\r\n                            oldClasses.forEach(oldClass => {\r\n                                /*\r\n                                 The regular structure goes as follows:\r\n                                 icon fa fa-oldClass\r\n                                 to be replaced by:\r\n                                 icon-saimaniq bi bi-newClass\r\n                                */\r\n                                oldClass.classList.replace('icon', 'icon-saimaniq');\r\n                                oldClass.classList.replace('fa', 'bi');\r\n                                oldClass.classList.replace(classToReplace.oldClass, classToReplace.newClass);\r\n                            });\r\n                        }\r\n                      });\r\n                    })\r\n                .catch((error) =>\r\n                       console.error(\"Unable to fetch data:\", error));\r\n        }\r\n    };\r\n});\r\n"],"names":["define","iconReplacer","urlToSend","forEach","async","urlVar","window","location","origin","http","XMLHttpRequest","open","send","status","fetch","then","res","ok","Error","json","data","classes","classToReplace","oldClasses","document","querySelectorAll","oldClass","classList","replace","newClass","catch","error","console"],"mappings":"AAGAA,sCAAO,WAEH,MAAO,CACHC,aAAc,WAEV,IAAIC,UAAY,GADE,CAAC,UAAW,YAAa,IAGjCC,SAAQC,iBACd,IAAIC,OAASC,OAAOC,SAASC,OAASD,SAAW,+BAEjD,IAAIE,KAAO,IAAIC,eACfD,KAAKE,KAAK,OAAQN,QAAQ,GAC1BI,KAAKG,OAEc,OAAfH,KAAKI,SAILX,UAAYG,WAKpBS,MAAMZ,WACDa,MAAMC,MACH,IAAKA,IAAIC,GACL,MAAM,IAAIC,MAAO,uBAAsBF,IAAIH,UAE/C,OAAOG,IAAIG,MAAM,IAEpBJ,MAAMK,OAGDA,KAAKC,QAAQlB,SAASmB,iBACpB,IAAIC,WAAaC,SAASC,iBAAiB,IAAMH,eAAeI,UAC7C,OAAfH,YAGAA,WAAWpB,SAAQuB,WAOfA,SAASC,UAAUC,QAAQ,OAAQ,iBACnCF,SAASC,UAAUC,QAAQ,KAAM,MACjCF,SAASC,UAAUC,QAAQN,eAAeI,SAAUJ,eAAeO,SAAS,MAGpF,IAEPC,OAAOC,OACDC,QAAQD,MAAM,wBAAyBA,UAG9D"}